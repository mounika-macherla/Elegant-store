{"mappings":"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","sources":["<anon>","script.js"],"sourcesContent":["(()=>{\n    // Products data in JSON format\n    const products = [\n        // Men category\n        {\n            id: 1,\n            name: \"Classic Men's T-Shirt\",\n            category: \"men\",\n            price: 19.99,\n            description: \"Comfortable cotton t-shirt in navy blue.\",\n            image: \"https://cdn11.bigcommerce.com/s-2gncvdgiio/images/stencil/1280x1280/products/107304/190106/Chill_Nation_Logo_Classic_arf_220720_arf__60647.1595409158.jpg?c=1\"\n        },\n        {\n            id: 2,\n            name: \"Men's Denim Jeans\",\n            category: \"men\",\n            price: 49.95,\n            description: \"Stylish slim-fit jeans for everyday wear.\",\n            image: \"https://ae01.alicdn.com/kf/HTB1g6eFbjLuK1Rjy0Fhq6xpdFXaB/2019-Mens-Skinny-Jeans-Black-Distressed-Denim-Stretch-Jeans-Men-Hombre-Slim-Fit-Fashion-Elastic-Waist.jpg\"\n        },\n        {\n            id: 3,\n            name: \"Leather Belt\",\n            category: \"men\",\n            price: 25.0,\n            description: \"Genuine leather belt with stylish buckle.\",\n            image: \"https://i.etsystatic.com/17144720/r/il/3e8033/3229078507/il_fullxfull.3229078507_mif6.jpg\"\n        },\n        // Women category\n        {\n            id: 4,\n            name: \"Elegant Women's Dress\",\n            category: \"women\",\n            price: 59.99,\n            description: \"Perfect evening dress with delicate lace details.\",\n            image: \"https://i5.walmartimages.com/asr/eb87c5ba-0a89-40af-8f8d-7114e36c70ee_1.adba80881b1e58c8c170e626dc78e980.jpeg\"\n        },\n        {\n            id: 5,\n            name: \"Women's Handbag\",\n            category: \"women\",\n            price: 45.0,\n            description: \"Chic handbag made from premium materials.\",\n            image: \"https://i5.walmartimages.com/asr/b23ad0a8-5db3-430d-b0d5-d99cda7abac6.c742955c146fad3c6c6ac618e7555728.jpeg\"\n        },\n        {\n            id: 6,\n            name: \"Stylish Sunglasses\",\n            category: \"women\",\n            price: 29.95,\n            description: \"Protect your eyes with fashion-forward sunglasses.\",\n            image: \"https://i.pinimg.com/originals/e4/f4/60/e4f460866229b45c550bf8bc9dc9e22a.jpg\"\n        },\n        // Kids category\n        {\n            id: 7,\n            name: \"Kids' Hoodie\",\n            category: \"kids\",\n            price: 22.49,\n            description: \"Cozy hoodie in vibrant colors for kids.\",\n            image: \"https://i5.walmartimages.com/asr/8b1d4b6c-bbeb-42a1-a5a7-a985316838f5_2.8a12fca55dbb5f8711150aaa15576812.jpeg\"\n        },\n        {\n            id: 8,\n            name: \"Kids' Sneakers\",\n            category: \"kids\",\n            price: 35.0,\n            description: \"Comfortable and durable sneakers for kids.\",\n            image: \"https://i5.walmartimages.com/seo/B91xZ-Girls-Sneakers-Children-Sneakers-Girls-Flat-Thick-Bottom-Non-Slip-Lightweight-Mesh-Upper-Breathable-White-2-Big-Kids_bea255f3-f24a-417d-9604-71db01742345.80a56f6b36210e166df784cb7cbf4657.jpeg\"\n        },\n        {\n            id: 9,\n            name: \"Kids' Cap\",\n            category: \"kids\",\n            price: 12.0,\n            description: \"Colorful cap perfect for sunny days.\",\n            image: \"http://images.esellerpro.com/2355/I/154/303/11107%20-%20CM306%20-%201.jpg\"\n        }\n    ];\n    let filteredProducts = products.slice();\n    // Cart structure: Array of {product, quantity}\n    const cart = [];\n    // Selectors\n    const productsContainer = document.querySelector('.products');\n    const categoryButtons = document.querySelectorAll('.category-btn');\n    const searchInput = document.getElementById('searchInput');\n    const cartButton = document.querySelector('nav .cart-button');\n    const cartPanel = document.getElementById('cartPanel');\n    const cartItemsContainer = cartPanel.querySelector('.cart-items');\n    const cartTotalContainer = cartPanel.querySelector('.cart-total');\n    const userDetailsForm = cartPanel.querySelector('form.user-details');\n    const invoiceSection = cartPanel.querySelector('.invoice-container');\n    const invoiceContent = cartPanel.querySelector('.invoice-content');\n    const printBtn = cartPanel.querySelector('.print-btn');\n    // Carousel handling\n    const carouselImages = document.querySelectorAll('.carousel-image');\n    const carouselButtons = document.querySelectorAll('.carousel-controls button');\n    let currentCarouselIndex = 0;\n    function showCarouselImage(index) {\n        carouselImages.forEach((img, i)=>{\n            img.style.display = i === index ? 'block' : 'none';\n        });\n        carouselButtons.forEach((btn, i)=>{\n            btn.classList.toggle('active', i === index);\n            btn.setAttribute('aria-pressed', i === index ? \"true\" : \"false\");\n        });\n        currentCarouselIndex = index;\n    }\n    carouselButtons.forEach((btn, i)=>{\n        btn.addEventListener('click', ()=>showCarouselImage(i));\n    });\n    // Auto cycle every 5 sec\n    setInterval(()=>{\n        let next = (currentCarouselIndex + 1) % carouselImages.length;\n        showCarouselImage(next);\n    }, 5000);\n    showCarouselImage(0);\n    // Utility: Render products to DOM\n    function renderProducts(productsToRender) {\n        productsContainer.innerHTML = '';\n        if (productsToRender.length === 0) {\n            productsContainer.innerHTML = '<p style=\"grid-column: 1/-1; text-align:center; color:#888;\">No products found.</p>';\n            return;\n        }\n        productsToRender.forEach((product)=>{\n            const card = document.createElement('article');\n            card.className = 'product-card';\n            card.setAttribute('role', 'article');\n            card.setAttribute('aria-label', product.name + ', price Rs.' + product.price.toFixed(2));\n            card.innerHTML = `\n                <img src=\"${product.image}\" alt=\"${product.name}\" loading=\"lazy\" />\n                <h3>${product.name}</h3>\n                <p>${product.description}</p>\n                <div class=\"price\">Rs.${product.price.toFixed(2)}</div>\n                <button class=\"add-to-cart\" aria-label=\"Add ${product.name} to cart\">Add to Cart</button>\n            `;\n            const btn = card.querySelector('button');\n            btn.addEventListener('click', ()=>addToCart(product.id));\n            productsContainer.appendChild(card);\n        });\n    }\n    // Filter products by category\n    function filterByCategory(category) {\n        if (category === 'all') filteredProducts = products.slice();\n        else filteredProducts = products.filter((p)=>p.category === category);\n        // Also apply search filter\n        applySearchFilter(searchInput.value.trim().toLowerCase());\n        renderProducts(filteredProducts);\n    }\n    // Search products inside currently filtered products\n    function applySearchFilter(searchTerm) {\n        if (!searchTerm) {\n            renderProducts(filteredProducts);\n            return;\n        }\n        const searched = filteredProducts.filter((p)=>p.name.toLowerCase().includes(searchTerm) || p.description.toLowerCase().includes(searchTerm));\n        renderProducts(searched);\n    }\n    // Add product to cart\n    function addToCart(productId) {\n        const existing = cart.find((item)=>item.product.id === productId);\n        if (existing) existing.quantity += 1;\n        else {\n            const product = products.find((p)=>p.id === productId);\n            if (product) cart.push({\n                product,\n                quantity: 1\n            });\n        }\n        updateCartUI();\n        // Open cart panel automatically when an item is added\n        if (!cartPanel.classList.contains('active')) toggleCartPanel(true);\n    }\n    // Remove product from cart\n    function removeFromCart(productId) {\n        const index = cart.findIndex((item)=>item.product.id === productId);\n        if (index !== -1) cart.splice(index, 1);\n        updateCartUI();\n    }\n    // Update cart UI\n    function updateCartUI() {\n        cartItemsContainer.innerHTML = '';\n        if (cart.length === 0) {\n            cartItemsContainer.innerHTML = '<p>Your cart is empty.</p>';\n            cartTotalContainer.textContent = '';\n            toggleUserDetails(false);\n            hideInvoice();\n        } else {\n            cart.forEach(({ product, quantity })=>{\n                const div = document.createElement('div');\n                div.className = 'cart-item';\n                div.innerHTML = `\n                    <span>${product.name} x ${quantity}</span>\n                    <button aria-label=\"Remove ${product.name} from cart\" title=\"Remove\" style=\"background:none;border:none;color:#5a2a83;cursor:pointer;font-weight:700;\">&times;</button>\n                `;\n                div.querySelector('button').addEventListener('click', ()=>removeFromCart(product.id));\n                cartItemsContainer.appendChild(div);\n            });\n            const total = cart.reduce((acc, item)=>acc + item.product.price * item.quantity, 0);\n            cartTotalContainer.textContent = `Total: Rs.${total.toFixed(2)}`;\n            toggleUserDetails(true);\n            hideInvoice();\n        }\n        updateCartCountBadge();\n    }\n    function toggleUserDetails(show) {\n        if (show) userDetailsForm.style.display = 'flex';\n        else userDetailsForm.style.display = 'none';\n    }\n    // Update cart count badge on cart button\n    function updateCartCountBadge() {\n        const countBadge = document.getElementById('cartCountBadge');\n        const totalItems = cart.reduce((acc, item)=>acc + item.quantity, 0);\n        countBadge.textContent = totalItems;\n        if (totalItems > 0) countBadge.style.display = 'inline-block';\n        else countBadge.style.display = 'none';\n    }\n    // Validate form fields\n    function validateForm() {\n        return userDetailsForm.reportValidity();\n    }\n    // Generate invoice HTML\n    function generateInvoice(userDetails, cartItems) {\n        let itemsRows = '';\n        cartItems.forEach(({ product, quantity }, idx)=>{\n            const price = product.price * quantity;\n            itemsRows += `\n                <tr>\n                    <td>${idx + 1}</td>\n                    <td>${product.name}</td>\n                    <td>Rs.${product.price.toFixed(2)}</td>\n                    <td>${quantity}</td>\n                    <td>Rs.${price.toFixed(2)}</td>\n                </tr>\n            `;\n        });\n        const total = cartItems.reduce((acc, item)=>acc + item.product.price * item.quantity, 0);\n        return `\n            <div class=\"invoice-section\">\n                <h3>Customer Details</h3>\n                <p><strong>Name:</strong> ${userDetails.name}</p>\n                <p><strong>Address:</strong> ${userDetails.address.replace(/\\n/g, '<br>')}</p>\n                <p><strong>Contact:</strong> ${userDetails.contact}</p>\n                <p><strong>Email:</strong> ${userDetails.email}</p>\n            </div>\n            <div class=\"invoice-section\">\n                <h3>Order Details</h3>\n                <table class=\"invoice-table\" aria-label=\"Order details table\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Product</th>\n                            <th>Unit Price</th>\n                            <th>Qty</th>\n                            <th>Subtotal</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        ${itemsRows}\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <th colspan=\"4\" style=\"text-align:right;\">Total</th>\n                            <th>Rs.${total.toFixed(2)}</th>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n            <div class=\"invoice-section\" style=\"margin-top:1rem; font-style: italic; color: #7f50be;\">\n                <p>Thank you for shopping at Elegance Store!</p>\n            </div>\n        `;\n    }\n    // Show invoice UI\n    function showInvoice(userDetails) {\n        invoiceContent.innerHTML = generateInvoice(userDetails, cart);\n        invoiceSection.classList.add('active');\n        // Scroll to invoice within cart panel\n        invoiceSection.scrollIntoView({\n            behavior: 'smooth'\n        });\n    }\n    function hideInvoice() {\n        invoiceSection.classList.remove('active');\n        invoiceContent.innerHTML = '';\n    }\n    // Toggle cart panel visibility\n    function toggleCartPanel(show) {\n        if (show) {\n            cartPanel.classList.add('active');\n            cartPanel.setAttribute('aria-hidden', 'false');\n            cartButton.setAttribute('aria-expanded', 'true');\n        } else {\n            cartPanel.classList.remove('active');\n            cartPanel.setAttribute('aria-hidden', 'true');\n            cartButton.setAttribute('aria-expanded', 'false');\n        }\n    }\n    cartButton.addEventListener('click', ()=>{\n        const isActive = cartPanel.classList.contains('active');\n        toggleCartPanel(!isActive);\n    });\n    // Close cart if clicked outside cart panel and cart button on small screens or desktop\n    document.addEventListener('click', (e)=>{\n        if (!cartPanel.contains(e.target) && !cartButton.contains(e.target)) toggleCartPanel(false);\n    });\n    // User details form submission\n    userDetailsForm.addEventListener('submit', (e)=>{\n        e.preventDefault();\n        if (!validateForm()) return;\n        if (cart.length === 0) {\n            alert(\"Your cart is empty. Please add some products.\");\n            return;\n        }\n        // Get user details data\n        const userDetails = {\n            name: userDetailsForm.name.value.trim(),\n            address: userDetailsForm.address.value.trim(),\n            contact: userDetailsForm.contact.value.trim(),\n            email: userDetailsForm.email.value.trim()\n        };\n        showInvoice(userDetails);\n    });\n    // Print invoice button handler\n    printBtn.addEventListener('click', ()=>{\n        if (!invoiceSection.classList.contains('active')) return;\n        // Open print dialog\n        window.print();\n    });\n    // Category selection\n    categoryButtons.forEach((btn)=>{\n        btn.addEventListener('click', ()=>{\n            categoryButtons.forEach((b)=>{\n                b.classList.remove('active');\n                b.setAttribute('aria-pressed', 'false');\n            });\n            btn.classList.add('active');\n            btn.setAttribute('aria-pressed', 'true');\n            filterByCategory(btn.getAttribute('data-category'));\n        });\n    });\n    // Search input\n    searchInput.addEventListener('input', (e)=>{\n        const val = e.target.value.trim().toLowerCase();\n        applySearchFilter(val);\n    });\n    // Initial rendering\n    filterByCategory('all');\n    updateCartUI(); // Initialize cart badge and content\n})();\n\n//# sourceMappingURL=Elegant store.e6a98661.js.map\n","(() => {\r\n    // Products data in JSON format\r\n    const products = [\r\n        // Men category\r\n        {id: 1, name: \"Classic Men's T-Shirt\", category: \"men\", price: 19.99, description: \"Comfortable cotton t-shirt in navy blue.\", image: \"https://cdn11.bigcommerce.com/s-2gncvdgiio/images/stencil/1280x1280/products/107304/190106/Chill_Nation_Logo_Classic_arf_220720_arf__60647.1595409158.jpg?c=1\"},\r\n        {id: 2, name: \"Men's Denim Jeans\", category: \"men\", price: 49.95, description: \"Stylish slim-fit jeans for everyday wear.\", image: \"https://ae01.alicdn.com/kf/HTB1g6eFbjLuK1Rjy0Fhq6xpdFXaB/2019-Mens-Skinny-Jeans-Black-Distressed-Denim-Stretch-Jeans-Men-Hombre-Slim-Fit-Fashion-Elastic-Waist.jpg\"},\r\n        {id: 3, name: \"Leather Belt\", category: \"men\", price: 25.0, description: \"Genuine leather belt with stylish buckle.\", image: \"https://i.etsystatic.com/17144720/r/il/3e8033/3229078507/il_fullxfull.3229078507_mif6.jpg\"},\r\n\r\n        // Women category\r\n        {id: 4, name: \"Elegant Women's Dress\", category: \"women\", price: 59.99, description: \"Perfect evening dress with delicate lace details.\", image: \"https://i5.walmartimages.com/asr/eb87c5ba-0a89-40af-8f8d-7114e36c70ee_1.adba80881b1e58c8c170e626dc78e980.jpeg\"},\r\n        {id: 5, name: \"Women's Handbag\", category: \"women\", price: 45.0, description: \"Chic handbag made from premium materials.\", image: \"https://i5.walmartimages.com/asr/b23ad0a8-5db3-430d-b0d5-d99cda7abac6.c742955c146fad3c6c6ac618e7555728.jpeg\"},\r\n        {id: 6, name: \"Stylish Sunglasses\", category: \"women\", price: 29.95, description: \"Protect your eyes with fashion-forward sunglasses.\", image: \"https://i.pinimg.com/originals/e4/f4/60/e4f460866229b45c550bf8bc9dc9e22a.jpg\"},\r\n\r\n        // Kids category\r\n        {id: 7, name: \"Kids' Hoodie\", category: \"kids\", price: 22.49, description: \"Cozy hoodie in vibrant colors for kids.\", image: \"https://i5.walmartimages.com/asr/8b1d4b6c-bbeb-42a1-a5a7-a985316838f5_2.8a12fca55dbb5f8711150aaa15576812.jpeg\"},\r\n        {id: 8, name: \"Kids' Sneakers\", category: \"kids\", price: 35.0, description: \"Comfortable and durable sneakers for kids.\", image: \"https://i5.walmartimages.com/seo/B91xZ-Girls-Sneakers-Children-Sneakers-Girls-Flat-Thick-Bottom-Non-Slip-Lightweight-Mesh-Upper-Breathable-White-2-Big-Kids_bea255f3-f24a-417d-9604-71db01742345.80a56f6b36210e166df784cb7cbf4657.jpeg\"},\r\n        {id: 9, name: \"Kids' Cap\", category: \"kids\", price: 12.0, description: \"Colorful cap perfect for sunny days.\", image: \"http://images.esellerpro.com/2355/I/154/303/11107%20-%20CM306%20-%201.jpg\"}\r\n    ];\r\n\r\n    let filteredProducts = products.slice();\r\n\r\n    // Cart structure: Array of {product, quantity}\r\n    const cart = [];\r\n\r\n    // Selectors\r\n    const productsContainer = document.querySelector('.products');\r\n    const categoryButtons = document.querySelectorAll('.category-btn');\r\n    const searchInput = document.getElementById('searchInput');\r\n    const cartButton = document.querySelector('nav .cart-button');\r\n    const cartPanel = document.getElementById('cartPanel');\r\n    const cartItemsContainer = cartPanel.querySelector('.cart-items');\r\n    const cartTotalContainer = cartPanel.querySelector('.cart-total');\r\n    const userDetailsForm = cartPanel.querySelector('form.user-details');\r\n    const invoiceSection = cartPanel.querySelector('.invoice-container');\r\n    const invoiceContent = cartPanel.querySelector('.invoice-content');\r\n    const printBtn = cartPanel.querySelector('.print-btn');\r\n\r\n    // Carousel handling\r\n    const carouselImages = document.querySelectorAll('.carousel-image');\r\n    const carouselButtons = document.querySelectorAll('.carousel-controls button');\r\n    let currentCarouselIndex = 0;\r\n\r\n    function showCarouselImage(index) {\r\n        carouselImages.forEach((img, i) => {\r\n            img.style.display = (i === index) ? 'block' : 'none';\r\n        });\r\n        carouselButtons.forEach((btn, i) => {\r\n            btn.classList.toggle('active', i === index);\r\n            btn.setAttribute('aria-pressed', i === index ? \"true\" : \"false\");\r\n        });\r\n        currentCarouselIndex = index;\r\n    }\r\n\r\n    carouselButtons.forEach((btn, i) => {\r\n        btn.addEventListener('click', () => showCarouselImage(i));\r\n    });\r\n\r\n    // Auto cycle every 5 sec\r\n    setInterval(() => {\r\n        let next = (currentCarouselIndex + 1) % carouselImages.length;\r\n        showCarouselImage(next);\r\n    }, 5000);\r\n    showCarouselImage(0);\r\n\r\n    // Utility: Render products to DOM\r\n    function renderProducts(productsToRender) {\r\n        productsContainer.innerHTML = '';\r\n        if (productsToRender.length === 0) {\r\n            productsContainer.innerHTML = '<p style=\"grid-column: 1/-1; text-align:center; color:#888;\">No products found.</p>';\r\n            return;\r\n        }\r\n        productsToRender.forEach(product => {\r\n            const card = document.createElement('article');\r\n            card.className = 'product-card';\r\n            card.setAttribute('role', 'article');\r\n            card.setAttribute('aria-label', product.name + ', price Rs.' + product.price.toFixed(2));\r\n            card.innerHTML = `\r\n                <img src=\"${product.image}\" alt=\"${product.name}\" loading=\"lazy\" />\r\n                <h3>${product.name}</h3>\r\n                <p>${product.description}</p>\r\n                <div class=\"price\">Rs.${product.price.toFixed(2)}</div>\r\n                <button class=\"add-to-cart\" aria-label=\"Add ${product.name} to cart\">Add to Cart</button>\r\n            `;\r\n            const btn = card.querySelector('button');\r\n            btn.addEventListener('click', () => addToCart(product.id));\r\n            productsContainer.appendChild(card);\r\n        });\r\n    }\r\n\r\n    // Filter products by category\r\n    function filterByCategory(category) {\r\n        if (category === 'all') {\r\n            filteredProducts = products.slice();\r\n        } else {\r\n            filteredProducts = products.filter(p => p.category === category);\r\n        }\r\n        // Also apply search filter\r\n        applySearchFilter(searchInput.value.trim().toLowerCase());\r\n        renderProducts(filteredProducts);\r\n    }\r\n\r\n    // Search products inside currently filtered products\r\n    function applySearchFilter(searchTerm) {\r\n        if (!searchTerm) {\r\n            renderProducts(filteredProducts);\r\n            return;\r\n        }\r\n        const searched = filteredProducts.filter(p =>\r\n            p.name.toLowerCase().includes(searchTerm) ||\r\n            p.description.toLowerCase().includes(searchTerm)\r\n        );\r\n        renderProducts(searched);\r\n    }\r\n\r\n    // Add product to cart\r\n    function addToCart(productId) {\r\n        const existing = cart.find(item => item.product.id === productId);\r\n        if (existing) {\r\n            existing.quantity += 1;\r\n        } else {\r\n            const product = products.find(p => p.id === productId);\r\n            if (product) {\r\n                cart.push({ product, quantity: 1 });\r\n            }\r\n        }\r\n        updateCartUI();\r\n        // Open cart panel automatically when an item is added\r\n        if (!cartPanel.classList.contains('active')) {\r\n            toggleCartPanel(true);\r\n        }\r\n    }\r\n\r\n    // Remove product from cart\r\n    function removeFromCart(productId) {\r\n        const index = cart.findIndex(item => item.product.id === productId);\r\n        if (index !== -1) {\r\n            cart.splice(index, 1);\r\n        }\r\n        updateCartUI();\r\n    }\r\n\r\n    // Update cart UI\r\n    function updateCartUI() {\r\n        cartItemsContainer.innerHTML = '';\r\n        if (cart.length === 0) {\r\n            cartItemsContainer.innerHTML = '<p>Your cart is empty.</p>';\r\n            cartTotalContainer.textContent = '';\r\n            toggleUserDetails(false);\r\n            hideInvoice();\r\n        } else {\r\n            cart.forEach(({ product, quantity }) => {\r\n                const div = document.createElement('div');\r\n                div.className = 'cart-item';\r\n                div.innerHTML = `\r\n                    <span>${product.name} x ${quantity}</span>\r\n                    <button aria-label=\"Remove ${product.name} from cart\" title=\"Remove\" style=\"background:none;border:none;color:#5a2a83;cursor:pointer;font-weight:700;\">&times;</button>\r\n                `;\r\n                div.querySelector('button').addEventListener('click', () => removeFromCart(product.id));\r\n                cartItemsContainer.appendChild(div);\r\n            });\r\n            const total = cart.reduce((acc, item) => acc + item.product.price * item.quantity, 0);\r\n            cartTotalContainer.textContent = `Total: Rs.${total.toFixed(2)}`;\r\n            toggleUserDetails(true);\r\n            hideInvoice();\r\n        }\r\n        updateCartCountBadge();\r\n    }\r\n\r\n    function toggleUserDetails(show) {\r\n        if (show) {\r\n            userDetailsForm.style.display = 'flex';\r\n        } else {\r\n            userDetailsForm.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    // Update cart count badge on cart button\r\n    function updateCartCountBadge() {\r\n        const countBadge = document.getElementById('cartCountBadge');\r\n        const totalItems = cart.reduce((acc, item) => acc + item.quantity, 0);\r\n        countBadge.textContent = totalItems;\r\n        if (totalItems > 0) {\r\n            countBadge.style.display = 'inline-block';\r\n        } else {\r\n            countBadge.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    // Validate form fields\r\n    function validateForm() {\r\n        return userDetailsForm.reportValidity();\r\n    }\r\n\r\n    // Generate invoice HTML\r\n    function generateInvoice(userDetails, cartItems) {\r\n        let itemsRows = '';\r\n        cartItems.forEach(({ product, quantity }, idx) => {\r\n            const price = product.price * quantity;\r\n            itemsRows += `\r\n                <tr>\r\n                    <td>${idx + 1}</td>\r\n                    <td>${product.name}</td>\r\n                    <td>Rs.${product.price.toFixed(2)}</td>\r\n                    <td>${quantity}</td>\r\n                    <td>Rs.${price.toFixed(2)}</td>\r\n                </tr>\r\n            `;\r\n        });\r\n        const total = cartItems.reduce((acc, item) => acc + item.product.price * item.quantity, 0);\r\n        return `\r\n            <div class=\"invoice-section\">\r\n                <h3>Customer Details</h3>\r\n                <p><strong>Name:</strong> ${userDetails.name}</p>\r\n                <p><strong>Address:</strong> ${userDetails.address.replace(/\\n/g, '<br>')}</p>\r\n                <p><strong>Contact:</strong> ${userDetails.contact}</p>\r\n                <p><strong>Email:</strong> ${userDetails.email}</p>\r\n            </div>\r\n            <div class=\"invoice-section\">\r\n                <h3>Order Details</h3>\r\n                <table class=\"invoice-table\" aria-label=\"Order details table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Product</th>\r\n                            <th>Unit Price</th>\r\n                            <th>Qty</th>\r\n                            <th>Subtotal</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        ${itemsRows}\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <th colspan=\"4\" style=\"text-align:right;\">Total</th>\r\n                            <th>Rs.${total.toFixed(2)}</th>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n            <div class=\"invoice-section\" style=\"margin-top:1rem; font-style: italic; color: #7f50be;\">\r\n                <p>Thank you for shopping at Elegance Store!</p>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    // Show invoice UI\r\n    function showInvoice(userDetails) {\r\n        invoiceContent.innerHTML = generateInvoice(userDetails, cart);\r\n        invoiceSection.classList.add('active');\r\n        // Scroll to invoice within cart panel\r\n        invoiceSection.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n    function hideInvoice() {\r\n        invoiceSection.classList.remove('active');\r\n        invoiceContent.innerHTML = '';\r\n    }\r\n\r\n    // Toggle cart panel visibility\r\n    function toggleCartPanel(show) {\r\n        if (show) {\r\n            cartPanel.classList.add('active');\r\n            cartPanel.setAttribute('aria-hidden', 'false');\r\n            cartButton.setAttribute('aria-expanded', 'true');\r\n        } else {\r\n            cartPanel.classList.remove('active');\r\n            cartPanel.setAttribute('aria-hidden', 'true');\r\n            cartButton.setAttribute('aria-expanded', 'false');\r\n        }\r\n    }\r\n\r\n    cartButton.addEventListener('click', () => {\r\n        const isActive = cartPanel.classList.contains('active');\r\n        toggleCartPanel(!isActive);\r\n    });\r\n\r\n    // Close cart if clicked outside cart panel and cart button on small screens or desktop\r\n    document.addEventListener('click', (e) => {\r\n        if (!cartPanel.contains(e.target) && !cartButton.contains(e.target)) {\r\n            toggleCartPanel(false);\r\n        }\r\n    });\r\n\r\n    // User details form submission\r\n    userDetailsForm.addEventListener('submit', e => {\r\n        e.preventDefault();\r\n        if (!validateForm()) return;\r\n\r\n        if (cart.length === 0) {\r\n            alert(\"Your cart is empty. Please add some products.\");\r\n            return;\r\n        }\r\n        // Get user details data\r\n        const userDetails = {\r\n            name: userDetailsForm.name.value.trim(),\r\n            address: userDetailsForm.address.value.trim(),\r\n            contact: userDetailsForm.contact.value.trim(),\r\n            email: userDetailsForm.email.value.trim()\r\n        };\r\n\r\n        showInvoice(userDetails);\r\n    });\r\n\r\n    // Print invoice button handler\r\n    printBtn.addEventListener('click', () => {\r\n        if (!invoiceSection.classList.contains('active')) return;\r\n        // Open print dialog\r\n        window.print();\r\n    });\r\n\r\n    // Category selection\r\n    categoryButtons.forEach(btn => {\r\n        btn.addEventListener('click', () => {\r\n            categoryButtons.forEach(b => {\r\n                b.classList.remove('active');\r\n                b.setAttribute('aria-pressed', 'false');\r\n            });\r\n            btn.classList.add('active');\r\n            btn.setAttribute('aria-pressed', 'true');\r\n            filterByCategory(btn.getAttribute('data-category'));\r\n        });\r\n    });\r\n\r\n    // Search input\r\n    searchInput.addEventListener('input', (e) => {\r\n        const val = e.target.value.trim().toLowerCase();\r\n        applySearchFilter(val);\r\n    });\r\n\r\n    // Initial rendering\r\n    filterByCategory('all');\r\n    updateCartUI(); // Initialize cart badge and content\r\n\r\n})();\r\n\r\n"],"names":["products","id","name","category","price","description","image","filteredProducts","slice","cart","productsContainer","document","querySelector","categoryButtons","querySelectorAll","searchInput","getElementById","cartButton","cartPanel","cartItemsContainer","cartTotalContainer","userDetailsForm","invoiceSection","invoiceContent","printBtn","carouselImages","carouselButtons","currentCarouselIndex","showCarouselImage","index","forEach","img","i","style","display","btn","classList","toggle","setAttribute","renderProducts","productsToRender","innerHTML","length","product","card","createElement","className","toFixed","addEventListener","addToCart","productId","existing","find","item","quantity","p","push","updateCartUI","contains","toggleCartPanel","appendChild","filterByCategory","filter","applySearchFilter","value","trim","toLowerCase","searchTerm","includes","textContent","toggleUserDetails","hideInvoice","div","removeFromCart","findIndex","splice","total","reduce","acc","countBadge","totalItems","show","remove","add","setInterval","e","target","preventDefault","reportValidity","alert","generateInvoice","userDetails","cartItems","itemsRows","idx","address","replace","contact","email","scrollIntoView","behavior","window","print","b","getAttribute"],"version":3,"file":"Elegant store.e6a98661.js.map"}